---
name: 📚 Publish Documentation to Confluence

on:
  workflow_call:
    inputs:
      target_environment:
        description: 'Target environment for publishing'
        required: false
        type: string
        default: 'production'
      dry_run:
        description: 'Perform a dry run without actual publishing'
        required: false
        type: boolean
        default: false
    secrets:
      CONFLUENCE_URL:
        required: true
      CONFLUENCE_USER:
        required: true
      CONFLUENCE_API_TOKEN:
        required: true

jobs:
  publish-confluence:
    name: 🚀 Publish to Confluence
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      actions: read

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            # Fallback to manual installation
            pip install ansible jinja2 requests markdown beautifulsoup4
          fi
          
          # Install pandoc for document conversion
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: 🔍 Validate Configuration
        run: |
          echo "🔍 Validating Confluence configuration..."
          
          # Check if required secrets are provided
          if [[ -z "${{ secrets.CONFLUENCE_URL }}" ]]; then
            echo "❌ CONFLUENCE_URL secret is required"
            exit 1
          fi
          
          if [[ -z "${{ secrets.CONFLUENCE_USER }}" ]]; then
            echo "❌ CONFLUENCE_USER secret is required"
            exit 1
          fi
          
          if [[ -z "${{ secrets.CONFLUENCE_API_TOKEN }}" ]]; then
            echo "❌ CONFLUENCE_API_TOKEN secret is required"
            exit 1
          fi
          
          echo "✅ All required secrets are configured"

      - name: 🔧 Prepare Publishing Environment
        run: |
          echo "🔧 Preparing publishing environment..."
          
          # Create output directory
          mkdir -p output/confluence
          
          # Set environment variables
          echo "CONFLUENCE_URL=${{ secrets.CONFLUENCE_URL }}" >> $GITHUB_ENV
          echo "CONFLUENCE_USER=${{ secrets.CONFLUENCE_USER }}" >> $GITHUB_ENV
          echo "CONFLUENCE_TOKEN=${{ secrets.CONFLUENCE_API_TOKEN }}" >> $GITHUB_ENV
          echo "DRY_RUN=${{ inputs.dry_run }}" >> $GITHUB_ENV
          echo "TARGET_ENV=${{ inputs.target_environment }}" >> $GITHUB_ENV
          
          # Create configuration file for Ansible
          cat > confluence_config.yml << EOF
          confluence:
            url: "${{ secrets.CONFLUENCE_URL }}"
            username: "${{ secrets.CONFLUENCE_USER }}"
            token: "${{ secrets.CONFLUENCE_API_TOKEN }}"
            space_key: "DOCS"
            parent_page_title: "Automation Documentation"
          
          publishing:
            dry_run: ${{ inputs.dry_run }}
            target_environment: "${{ inputs.target_environment }}"
            timestamp: "$(date -u +"%Y-%m-%d %H:%M:%S UTC")"
            git_ref: "${{ github.ref_name }}"
            commit_sha: "${{ github.sha }}"
          EOF

      - name: 📝 Process Documentation
        run: |
          echo "📝 Processing documentation for publishing..."
          
          # Run the documentation processing playbook
          if [[ -f "playbooks/publish_confluence.yml" ]]; then
            echo "✅ Found Confluence publishing playbook"
            ansible-playbook -i inventory/hosts playbooks/publish_confluence.yml \
              -e @confluence_config.yml \
              -e dry_run=${{ inputs.dry_run }} \
              -v
          elif [[ -f "playbooks/04-publish-confluence.yml" ]]; then
            echo "✅ Found numbered Confluence publishing playbook"
            ansible-playbook -i inventory/hosts playbooks/04-publish-confluence.yml \
              -e @confluence_config.yml \
              -e dry_run=${{ inputs.dry_run }} \
              -v
          else
            echo "🔧 No specific Confluence playbook found, running main playbook..."
            if [[ -f "playbooks/main.yml" ]]; then
              ansible-playbook -i inventory/hosts playbooks/main.yml \
                -e @confluence_config.yml \
                -e dry_run=${{ inputs.dry_run }} \
                -v
            else
              echo "❌ No suitable playbook found for Confluence publishing"
              exit 1
            fi
          fi

      - name: 📊 Generate Publishing Report
        if: always()
        run: |
          echo "📊 Generating publishing report..."
          
          # Create a summary report
          cat > output/confluence/publishing_report.md << EOF
          # 📚 Confluence Publishing Report
          
          ## 📋 Publishing Details
          - **Target Environment**: ${{ inputs.target_environment }}
          - **Dry Run**: ${{ inputs.dry_run }}
          - **Timestamp**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          - **Git Reference**: ${{ github.ref_name }}
          - **Commit SHA**: ${{ github.sha }}
          - **Workflow Run**: ${{ github.run_number }}
          
          ## 🔗 Links
          - **Repository**: ${{ github.server_url }}/${{ github.repository }}
          - **Workflow Run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          ## 📈 Status
          ${{ inputs.dry_run == true && '🧪 **DRY RUN** - No actual changes were made' || '✅ **LIVE RUN** - Documentation was published to Confluence' }}
          EOF
          
          echo "✅ Publishing report generated"
          cat output/confluence/publishing_report.md

      - name: 📤 Upload Publishing Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: confluence-publishing-report-${{ github.run_id }}
          path: |
            output/confluence/
            confluence_config.yml
          retention-days: 30
          if-no-files-found: warn

      - name: 🔔 Publishing Summary
        if: always()
        run: |
          echo "## 📚 Confluence Publishing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Target Environment**: ${{ inputs.target_environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dry Run**: ${{ inputs.dry_run }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Git Reference**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ inputs.dry_run }}" == "true" ]]; then
            echo "### 🧪 Dry Run Results" >> $GITHUB_STEP_SUMMARY
            echo "- No actual changes were made to Confluence" >> $GITHUB_STEP_SUMMARY
            echo "- Documentation processing completed successfully" >> $GITHUB_STEP_SUMMARY
            echo "- Ready for live publishing when needed" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ✅ Publishing Results" >> $GITHUB_STEP_SUMMARY
            echo "- Documentation has been published to Confluence" >> $GITHUB_STEP_SUMMARY
            echo "- Check Confluence space for updated content" >> $GITHUB_STEP_SUMMARY
          fi
