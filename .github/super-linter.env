---
# Super Linter Static Configuration
# CI workflow handles all VALIDATE_* settings - this file provides supporting config

##########################
# Performance Settings   #
##########################

# Performance optimization
PARALLEL: true
SLIM_IMAGE: true
FAIL_FAST: false
DISABLE_ERRORS: false

##########################
# Output Configuration   #
##########################

# Comprehensive reporting
OUTPUT_FORMAT: tap
OUTPUT_DETAILS: detailed
OUTPUT_FOLDER: super-linter.report

# Summary and status reporting
SUMMARY_FILE: super-linter-summary.md

##########################
# Configuration Files    #
##########################

# Use project-specific config files (auto-detected at repo root)
YAML_CONFIG_FILE: .yamllint
ANSIBLE_LINT_CONFIG_FILE: .ansible-lint
ANSIBLE_CONFIG_FILE: ansible.cfg
MARKDOWN_CONFIG_FILE: .markdownlint.json

##########################
# File Filtering         #
##########################

# Include patterns for comprehensive coverage
FILTER_REGEX_INCLUDE: .*\.(yml|yaml|md|py|sh|json|js|ts|css|scss|tf|tfvars|ps1|psm1|dockerfile|xml|sql|env)$

# Exclude patterns to avoid false positives and sensitive areas
FILTER_REGEX_EXCLUDE: |
  .*\.git.*
  .*node_modules.*
  .*\.venv.*
  .*venv.*
  .*__pycache__.*
  .*\.pytest_cache.*
  .*\.tox.*
  .*build.*
  .*dist.*
  vars/vars\.yml$
  .*test_.*\.py$
  .*_test\.py$
  .*\.min\.js$
  .*\.min\.css$

# Gitignore integration
IGNORE_GITIGNORED_FILES: true

##########################
# Explicitly Disabled   #
# (Prevent any accidental activation)
##########################

# Disable linters not needed for typical Ansible/DevOps projects
VALIDATE_CHECKOV: false
VALIDATE_TEKTON: false
VALIDATE_KUBERNETES_KUBEVAL: false
VALIDATE_OPENAPI: false
VALIDATE_PROTOBUF: false
VALIDATE_CLANG_FORMAT: false
VALIDATE_CPPLINT: false
VALIDATE_CLANG_TIDY: false
VALIDATE_RUST_2015: false
VALIDATE_RUST_2018: false
VALIDATE_RUST_2021: false
VALIDATE_RUST_CLIPPY: false
VALIDATE_GO: false
VALIDATE_GO_MODULES: false
VALIDATE_GROOVY: false
VALIDATE_JAVA: false
VALIDATE_KOTLIN: false
VALIDATE_LATEX: false
VALIDATE_LUA: false
VALIDATE_PERL: false
VALIDATE_PHP_BUILTIN: false
VALIDATE_PHP_PHPCS: false
VALIDATE_PHP_PHPSTAN: false
VALIDATE_PHP_PSALM: false
VALIDATE_RAKU: false
VALIDATE_RUBY: false
VALIDATE_SCALA: false
VALIDATE_SCALAFMT: false
VALIDATE_SNAKEMAKE_LINT: false
VALIDATE_SNAKEMAKE_SNAKEFMT: false
VALIDATE_STATES: false
VALIDATE_NATURAL_LANGUAGE: false

##########################
# Ansible Specific      #
##########################

# Ansible configuration
ANSIBLE_DIRECTORY: .
ANSIBLE_CONFIG_FILE: ansible.cfg

# Custom rules directory (if using custom ansible-lint rules)
ANSIBLE_LINT_CUSTOM_RULES_DIR: custom_rules

##########################
# Python Specific       #
##########################

# Python configuration files (if they exist)
PYTHON_BLACK_CONFIG_FILE: pyproject.toml
PYTHON_FLAKE8_CONFIG_FILE: .flake8
PYTHON_ISORT_CONFIG_FILE: pyproject.toml
PYTHON_PYLINT_CONFIG_FILE: .pylintrc

##########################
# JavaScript/TypeScript #
##########################

# JS/TS configuration files (if they exist)
JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.yml
TYPESCRIPT_ES_CONFIG_FILE: .eslintrc.yml

##########################
# Performance Tuning    #
##########################

# Timeout settings (in seconds)
TIMEOUT_COMMAND: 600

##########################
# NOTE                   #
##########################
# VALIDATE_* and FIX_* settings are handled in the CI workflow
# to enable intelligent conditional validation based on file presence
# This file provides supporting configuration only