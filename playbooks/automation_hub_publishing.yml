---
# Automation Hub Confluence Publishing Playbook
# Publishes the Automation Hub documentation to the specific Confluence page

- name: "Automation Hub Documentation Publishing"
  hosts: localhost
  connection: local
  gather_facts: true
  vars_files:
    - ../vars/vars.yml

  tasks:
    - name: "📊 Publishing Overview"
      ansible.builtin.debug:
        msg: |
          ================================================
          🎯 Automation Hub Documentation Publishing
          ================================================
          Confluence URL: {{ confluence_url }}
          Space: {{ confluence_space }}
          Target Page ID: {{ automation_hub_page_id }}
          Target Page Title: {{ automation_hub_page_title }}
          Project: {{ project_name }}
          ================================================

    - name: "Discover documentation structure"
      ansible.builtin.command:
        cmd: python3 scripts/discover_docs_enhanced.py
        chdir: ".."
      register: discovery_result

    - name: "Parse discovery results"
      ansible.builtin.set_fact:
        doc_sections: "{{ discovery_result.stdout | from_json }}"

    - name: "📋 Show discovered sections"
      ansible.builtin.debug:
        msg: |
          Discovered documentation sections:
          {% for section_name, section_info in doc_sections.items() %}
          - {{ section_name }}: {{ section_info.children | length }} children
            Main template: {{ section_info.main_template }}
            Path: {{ section_info.path }}
          {% endfor %}

    - name: "🎯 Update main Automation Hub page (ID: {{ automation_hub_page_id }})"
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content/{{ automation_hub_page_id }}"
        method: GET
        headers:
          Authorization: "Basic {{ confluence_auth }}"
        status_code: [200, 404]
      register: main_page_query

    - name: "🔄 Update main page content"
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content/{{ automation_hub_page_id }}"
        method: PUT
        headers:
          Authorization: "Basic {{ confluence_auth }}"
          Content-Type: "application/json"
        body_format: json
        body:
          version:
            number: "{{ main_page_query.json.version.number + 1 }}"
          title: "{{ automation_hub_page_title }}"
          type: page
          body:
            storage:
              value: "{{ lookup('file', lookup('env', 'HOME') + '/tmp/automation_hub.md.html') }}"
              representation: storage
      register: main_page_update
      when:
        - main_page_query is defined
        - main_page_query.status == 200

    - name: "📋 Debug main page update"
      ansible.builtin.debug:
        msg: |
          Main page update result:
          Status: {{ main_page_update.status | default('Not executed') }}
          {% if main_page_update.status == 200 %}
          ✅ Main page updated successfully
          Version: {{ main_page_update.json.version.number }}
          {% else %}
          ❌ Main page update failed
          {% endif %}

    - name: "🔍 Check for existing child pages"
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content?spaceKey={{ confluence_space | urlencode }}&title={{ item.name | title | replace('_', ' ') | urlencode }}&expand=version"
        method: GET
        headers:
          Authorization: "Basic {{ confluence_auth }}"
        status_code: [200, 404]
      register: child_page_queries
      loop: "{{ doc_sections.automation_hub.children | default([]) }}"
      when: "'automation_hub' in doc_sections"

    - name: "📝 Create new child pages"
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content"
        method: POST
        headers:
          Authorization: "Basic {{ confluence_auth }}"
          Content-Type: "application/json"
        body_format: json
        body:
          type: page
          title: "{{ item.name | title | replace('_', ' ') }}"
          space:
            key: "{{ confluence_space }}"
          ancestors:
            - id: "{{ automation_hub_page_id }}"
          body:
            storage:
              value: "{{ lookup('file', lookup('env', 'HOME') + '/tmp/' + item.name + '.md.html') }}"
              representation: storage
      register: create_child_pages
      failed_when: false
      loop: "{{ doc_sections.automation_hub.children | default([]) }}"
      when:
        - "'automation_hub' in doc_sections"
        - child_page_queries.results[ansible_loop.index0].status == 404

    - name: "🔄 Update existing child pages"
      ansible.builtin.uri:
        url: "{{ confluence_url }}/rest/api/content/{{ child_page_queries.results[ansible_loop.index0].json.results[0].id }}"
        method: PUT
        headers:
          Authorization: "Basic {{ confluence_auth }}"
          Content-Type: "application/json"
        body_format: json
        body:
          version:
            number: "{{ child_page_queries.results[ansible_loop.index0].json.results[0].version.number + 1 }}"
          title: "{{ item.name | title | replace('_', ' ') }}"
          type: page
          ancestors:
            - id: "{{ automation_hub_page_id }}"
          body:
            storage:
              value: "{{ lookup('file', lookup('env', 'HOME') + '/tmp/' + item.name + '.md.html') }}"
              representation: storage
      register: update_child_pages
      loop: "{{ doc_sections.automation_hub.children | default([]) }}"
      loop_control:
        extended: true
      when:
        - "'automation_hub' in doc_sections"
        - child_page_queries is defined
        - child_page_queries.results[ansible_loop.index0].status == 200
        - child_page_queries.results[ansible_loop.index0].json.results | length > 0

    - name: "📊 Publishing Summary"
      ansible.builtin.debug:
        msg: |
          ================================================
          📊 Publishing Summary
          ================================================
          Main Page ({{ automation_hub_page_title }}):
          {% if main_page_update.status == 200 %}
          ✅ Updated successfully (Version {{ main_page_update.json.version.number }})
          {% else %}
          ❌ Update failed or not executed
          {% endif %}
          
          Child Pages:
          {% for item in doc_sections.automation_hub.children | default([]) %}
          - {{ item.name | title | replace('_', ' ') }}: 
            {% if child_page_queries.results[loop.index0].status == 404 %}
              {% if create_child_pages.results[loop.index0].status == 200 %}
                ✅ Created successfully
              {% else %}
                ❌ Creation failed
              {% endif %}
            {% else %}
              {% if update_child_pages is defined and update_child_pages.results[loop.index0].status == 200 %}
                ✅ Updated successfully
              {% else %}
                ⚠️  Update status unknown
              {% endif %}
            {% endif %}
          {% endfor %}
          ================================================
          🌐 View in Confluence: {{ confluence_url }}/spaces/{{ confluence_space }}/pages/{{ automation_hub_page_id }}
          ================================================
