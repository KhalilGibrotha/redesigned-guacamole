---
# Template Conversion Playbook
# Converts Jinja2 templates to markdown using make targets

- name: "Template Conversion"
  hosts: localhost
  connection: local
  gather_facts: true
  vars_files:
    - ../vars/vars.yml

  tasks:
    - name: "Create temporary directory for markdown processing"
      ansible.builtin.file:
        path: "~/tmp"
        state: directory
        mode: '0755'

    - name: "Debug - Show template rendering details"
      ansible.builtin.debug:
        msg: |
          About to render Jinja2 templates:
          Source: {{ item }}
          Destination: ~/tmp/{{ item | basename | replace('.j2', '') }}
      loop:
        - ../docs/main.md.j2
        - ../docs/platform_governance.md.j2
        - ../docs/platform_runbook.md.j2
        - ../docs/operator_runbook.md.j2
        - ../docs/training_enablement.md.j2

    - name: "Render Jinja templates to markdown using make"
      ansible.builtin.command: make -C .. convert-templates
      register: template_conversion
      changed_when: true

    - name: "Debug - Show template conversion result"
      ansible.builtin.debug:
        msg: |
          Template conversion result:
          Return code: {{ template_conversion.rc }}
          Output: {{ template_conversion.stdout }}
          Errors: {{ template_conversion.stderr | default('None') }}

    - name: "Verify markdown files were created"
      ansible.builtin.stat:
        path: "~/tmp/{{ item }}"
      register: md_files_check
      loop:
        - main.md
        - platform_governance.md
        - platform_runbook.md
        - operator_runbook.md
        - training_enablement.md

    - name: "Debug - Show markdown file status"
      ansible.builtin.debug:
        msg: "File ~/tmp/{{ item.item }} exists: {{ item.stat.exists }}, size: {{ item.stat.size | default('N/A') }}"
      loop: "{{ md_files_check.results }}"

    - name: "Fail if markdown files are missing"
      ansible.builtin.fail:
        msg: "Failed to create markdown file: ~/tmp/{{ item.item }}"
      loop: "{{ md_files_check.results }}"
      when: not item.stat.exists
