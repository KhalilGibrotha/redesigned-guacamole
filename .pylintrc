# Pylint configuration file
# Compatible with pylint 2.x and 3.x

[MASTER]
# Python code to execute, usually for sys.path manipulation
init-hook=

# Add files or directories to the blacklist
ignore=CVS,.git,__pycache__,.pytest_cache,.tox,.venv,venv,build,dist,*.egg-info,.mypy_cache,node_modules

# Add files or directories matching the regex patterns to the blacklist
ignore-patterns=

# List of plugins (as comma separated values of python modules names) to load
load-plugins=

# Use multiple processes to speed up Pylint
jobs=0

# Control the amount of potential inferred values when inferring a single object
limit-inference-results=100

# Specify a configuration file
#rcfile=

# Allow loading of arbitrary C extensions
unsafe-load-any-extension=no

# In error mode, checkers without error messages are disabled
errors-only=no

[MESSAGES CONTROL]
# Disable specific warnings and errors
# C0103: Invalid name (too restrictive for variables)
# C0111: Missing docstring (too verbose for all functions)
# C0114: Missing module docstring (handled by team preference)
# C0115: Missing class docstring (handled by team preference)
# C0116: Missing function docstring (handled by team preference)
# C0301: Line too long (handled by Black)
# C0326: Bad whitespace (handled by Black)
# C0330: Wrong hanging indentation (conflicts with Black)
# R0903: Too few public methods (doesn't apply to data classes)
# R0913: Too many arguments (sometimes necessary)
# W0613: Unused argument (common in inherited methods)
# W0622: Redefining built-in (sometimes necessary)
# E1101: Instance has no member (false positives with dynamic attributes)
# R0801: Similar lines in files (handled at code review)
# R0912: Too many branches (sometimes necessary for complex logic)
# R0915: Too many statements (sometimes necessary for complex logic)
disable=C0103,C0111,C0114,C0115,C0116,C0301,R0903,R0913,W0613,W0622,E1101,R0801,R0912,R0915

# Enable specific warnings that are disabled by default
#enable=

[REPORTS]
# Set the output format
output-format=text

# Template used to display messages
msg-template={path}:{line}:{column}: {msg_id}: {msg} ({symbol})

# Set to 'no' if you don't want a score
score=yes

[REFACTORING]
# Maximum number of nested blocks for function / method body
max-nested-blocks=5

# Complete name of functions that never returns
never-returning-functions=sys.exit

[BASIC]
# Good variable names which should always be accepted
good-names=i,j,k,ex,Run,_,id,db,pk

# Bad variable names which should always be refused
bad-names=foo,bar,baz,toto,tutu,tata

# Colon-delimited sets of names that determine each other's naming style
name-group=

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# Naming style matching correct function names
function-naming-style=snake_case

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming style matching correct variable names
variable-naming-style=snake_case

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming style matching correct constant names
const-naming-style=UPPER_CASE

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Naming style matching correct attribute names
attr-naming-style=snake_case

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming style matching correct argument names
argument-naming-style=snake_case

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Naming style matching correct class attribute names
class-attribute-naming-style=any

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# Naming style matching correct class names
class-naming-style=PascalCase

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Naming style matching correct module names
module-naming-style=snake_case

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Naming style matching correct method names
method-naming-style=snake_case

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match function or class names that do not require a docstring
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings
docstring-min-length=-1

[FORMAT]
# Maximum number of characters on a single line
max-line-length=120

# Regexp for a line that is allowed to be longer than the limit
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no else
single-line-if-stmt=no

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit
indent-string='    '

# Number of spaces of indent required inside a hanging or continued line
indent-after-paren=4

# Expected format of line ending
expected-line-ending-format=

[LOGGING]
# Logging modules to check that the string format arguments are in logging function parameter format
logging-modules=logging

[MISCELLANEOUS]
# List of note tags to take in consideration
notes=FIXME,XXX,TODO

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=4

# Ignore comments when computing similarities
ignore-comments=yes

# Ignore docstrings when computing similarities
ignore-docstrings=yes

# Ignore imports when computing similarities
ignore-imports=no

[SPELLING]
# Spelling dictionary name
spelling-dict=

# List of comma separated words that should not be checked
spelling-ignore-words=

# A path to a file that contains private dictionary
spelling-private-dict-file=

# Tells whether to store unknown words to indicated private dictionary
spelling-store-unknown-words=no

[TYPECHECK]
# List of decorators that produce context managers
contextmanager-decorators=contextlib.contextmanager

# List of members which are set dynamically and missed by pylint inference system
generated-members=

# Tells whether missing members accessed in mixin class should be ignored
ignore-mixin-members=yes

# List of module names for which member attributes should not be checked
ignored-modules=

# List of class names for which member attributes should not be checked
ignored-classes=optparse.Values,thread._local,_thread._local

[VARIABLES]
# Tells whether we should check for unused import in __init__ files
init-import=no

# A regular expression matching the name of dummy variables
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# List of additional names supposed to be defined in builtins
additional-builtins=

# List of strings which can identify a callback function by name
callbacks=cb_,_cb

# List of qualified module names which can have objects that can redefine builtins
redefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes
defining-attr-methods=__init__,__new__,setUp

# List of member names, which should be excluded from the protected access warning
exclude-protected=_asdict,_fields,_replace,_source,_make

# List of valid names for the first argument in a class method
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method
valid-metaclass-classmethod-first-arg=cls

[DESIGN]
# Maximum number of arguments for function / method
max-args=8

# Maximum number of attributes for a class
max-attributes=10

# Maximum number of boolean expressions in an if statement
max-bool-expr=5

# Maximum number of branch for function / method body
max-branches=15

# Maximum number of locals for function / method body
max-locals=20

# Maximum number of parents for a class
max-parents=7

# Maximum number of public methods for a class
max-public-methods=25

# Maximum number of return / yield for function / method body
max-returns=8

# Maximum number of statements in function / method body
max-statements=60

# Minimum number of public methods for a class
min-public-methods=1

[IMPORTS]
# Allow wildcard imports from modules that define __all__
allow-wildcard-with-all=no

# Analyse import fallback blocks
analyse-fallback-blocks=no

# Deprecated modules which should not be used
deprecated-modules=optparse,tkinter.tix

# Create a graph of every (i.e. internal and external) dependencies in the given file
ext-import-graph=

# Create a graph of external dependencies in the given file
import-graph=

# Create a graph of internal dependencies in the given file
int-import-graph=

# Force import order to recognize a module as part of the standard compatibility libraries
known-standard-library=

# Force import order to recognize a module as part of a third party library
known-third-party=

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught
overgeneral-exceptions=builtins.Exception
