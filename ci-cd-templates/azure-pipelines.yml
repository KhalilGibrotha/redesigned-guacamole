# Azure DevOps Pipeline Configuration
# Copy this to azure-pipelines.yml for Azure DevOps

trigger:
  branches:
    include:
      - main
      - develop
      - feature/*
  paths:
    exclude:
      - README.md
      - docs/*

pr:
  branches:
    include:
      - main
      - develop

variables:
  pythonVersion: '3.11'
  pipCacheDir: $(Pipeline.Workspace)/.pip

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Validate
  displayName: 'Validation Stage'
  jobs:
  - job: Lint
    displayName: 'Lint and Syntax Check'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    
    - task: Cache@2
      inputs:
        key: 'python | "$(Agent.OS)" | requirements.txt'
        restoreKeys: |
          python | "$(Agent.OS)"
          python
        path: $(pipCacheDir)
      displayName: 'Cache pip packages'
    
    - script: |
        python -m pip install --upgrade pip
        pip install ansible-lint yamllint
        sudo apt-get update && sudo apt-get install -y make pandoc
      displayName: 'Install dependencies'
    
    - script: make sanity-check
      displayName: 'Sanity Check'
    
    - script: make lint
      displayName: 'Lint Check'
    
    - script: make validate-templates
      displayName: 'Template Validation'
    
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/test-results.xml'
        testRunTitle: 'Validation Tests'
      displayName: 'Publish test results'

- stage: Security
  displayName: 'Security Stage'
  dependsOn: Validate
  condition: succeeded()
  jobs:
  - job: SecurityScan
    displayName: 'Security Scanning'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    
    - script: |
        sudo apt-get update && sudo apt-get install -y make
      displayName: 'Install dependencies'
    
    - script: make security-check
      displayName: 'Security Check'
      continueOnError: true
    
    - task: PublishBuildArtifacts@1
      condition: always()
      inputs:
        pathtoPublish: '$(System.DefaultWorkingDirectory)'
        artifactName: 'security-scan-results'
      displayName: 'Publish security results'

- stage: Test
  displayName: 'Testing Stage'
  dependsOn: [Validate, Security]
  condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/develop'))
  jobs:
  - job: FullValidation
    displayName: 'Full Validation'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    
    - script: |
        python -m pip install --upgrade pip
        pip install ansible-lint ansible yamllint
        sudo apt-get update && sudo apt-get install -y make pandoc
      displayName: 'Install dependencies'
    
    - script: make validate
      displayName: 'Full Validation'
    
    - script: make test-render
      displayName: 'Template Rendering Test'
    
    - task: PublishBuildArtifacts@1
      condition: always()
      inputs:
        pathtoPublish: '$(System.DefaultWorkingDirectory)'
        artifactName: 'validation-results'
      displayName: 'Publish validation results'

  - job: MoleculeTest
    displayName: 'Molecule Testing'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    
    - script: |
        python -m pip install --upgrade pip
        pip install molecule[docker] ansible
        sudo apt-get update && sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo usermod -aG docker $(whoami)
      displayName: 'Install Molecule and Docker'
    
    - script: |
        export PATH="$HOME/.local/bin:$PATH"
        molecule test || echo "Molecule tests failed - continuing"
      displayName: 'Run Molecule Tests'
      continueOnError: true
    
    - task: PublishTestResults@2
      condition: always()
      inputs:
        testResultsFiles: '**/molecule-results.xml'
        testRunTitle: 'Molecule Tests'
      displayName: 'Publish Molecule results'

- stage: Deploy
  displayName: 'Deployment Stage'
  dependsOn: Test
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeploymentValidation
    displayName: 'Deployment Validation'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python $(pythonVersion)'
          
          - script: |
              python -m pip install --upgrade pip
              pip install ansible-lint ansible yamllint
              sudo apt-get update && sudo apt-get install -y make pandoc
            displayName: 'Install dependencies'
          
          - script: make validate
            displayName: 'Pre-deployment validation'
          
          - script: echo "Ready for deployment"
            displayName: 'Deployment ready'
